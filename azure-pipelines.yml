# azure-pipelines.yml  (Self-hosted Windows agent + Maven build with cache)

trigger:
  - main   # change if your default branch is different

pool:
  name: SelfHostedPool  # <-- use your self-hosted pool

variables:
  # Use a per-pipeline Maven repository folder to enable caching
  MAVEN_CACHE_DIR: '$(Pipeline.Workspace)/.m2'

steps:
  # Check Java & Maven versions on the agent
  - script: |
      echo "Java version:"
      java -version
      echo "Maven version:"
      mvn -version
    displayName: 'Verify Java & Maven on agent'

  # Cache your Maven local repo to speed up builds
  - task: Cache@2
    displayName: 'Cache Maven local repo'
    inputs:
      key: 'maven | "$(Agent.OS)" | **/pom.xml'
      restoreKeys: |
        maven | "$(Agent.OS)"
        maven
      path: '$(MAVEN_CACHE_DIR)'

  # Build with Maven and redirect local repo to the cached folder
  - task: Maven@4
    displayName: 'Build with Maven'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean package'
      options: '-Dmaven.repo.local=$(MAVEN_CACHE_DIR)'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'

  # Publish the built JAR(s) as pipeline artifacts so you can download them
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    inputs:
      PathtoPublish: '$(System.DefaultWorkingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
